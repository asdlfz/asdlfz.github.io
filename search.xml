<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>hello world</title>
      <link href="/helloworld.html"/>
      <url>/helloworld.html</url>
      
        <content type="html"><![CDATA[<p><strong><font size="10">Hello World</font></strong></p>]]></content>
      
      
      <categories>
          
          <category> Blog </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Github </tag>
            
            <tag> Hexo </tag>
            
            <tag> 博客搭建 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>解决无法访问 Github</title>
      <link href="/jie-jue-wu-fa-fang-wen-github.html"/>
      <url>/jie-jue-wu-fa-fang-wen-github.html</url>
      
        <content type="html"><![CDATA[<!--[CDATA[ <!-- wp:paragraph --> <p>查阅了一些资料，发现需要在hosts文件中添加映射。<br>在hosts文件中加入两行</p> <!-- /wp:paragraph --> <!-- wp:image {"id":118,"sizeSlug":"large","linkDestination":"media"} --> <figure class="wp-block-image size-large"><a href="https://imjoez.files.wordpress.com/2022/04/1.png"><img src="https://imjoez.files.wordpress.com/2022/04/1.png?w=486" alt="" class="wp-image-118" /></a></figure> <!-- /wp:image --> <!-- wp:paragraph --> <p>140.82.113.4 github.com<br>140.82.113.4 www.github.com</p> <!-- /wp:paragraph --> <!-- wp:paragraph --> <p>其中的ip地址是在&nbsp;<a href="https://github.com.ipaddress.com/www.github.com" target="_blank" rel="noreferrer noopener">https://github.com.ipaddress.com/www.github.com</a>&nbsp;中查询的</p> <!-- /wp:paragraph --> <!-- wp:image {"id":119,"sizeSlug":"large","linkDestination":"media"} --> <figure class="wp-block-image size-large"><a href="https://imjoez.files.wordpress.com/2022/04/2.png"><img src="https://imjoez.files.wordpress.com/2022/04/2.png?w=1000" alt="" class="wp-image-119" /></a></figure> <!-- /wp:image --> <!-- wp:paragraph --> <p>看很多博客介绍此时应该就可以正常访问了，但我还是无法访问，发现可能是安全证书的问题</p> <!-- /wp:paragraph --> <!-- wp:paragraph --> <p>打开 <a href="http://tool.chinaz.com/dns" target="_blank" rel="noreferrer noopener">http://tool.chinaz.com/dns</a><br>查询 github.global.ssl.fastly.net 和 assets-cdn.github.com 两个地址， 选取TTL值低的ip地址<br>把这两行写入hosts文件</p> <!-- /wp:paragraph --> <!-- wp:paragraph --> <p>清理dns缓存，win+r，输入‘cmd’，再输入ipconfig/flushdns；</p> <!-- /wp:paragraph --> <!-- wp:paragraph --> <p>就可以正常访问了</p> <!-- /wp:paragraph --> <!-- wp:image {"id":121,"sizeSlug":"large","linkDestination":"media"} --> <figure class="wp-block-image size-large"><a href="https://imjoez.files.wordpress.com/2022/04/3.png"><img src="https://imjoez.files.wordpress.com/2022/04/3.png?w=690" alt="" class="wp-image-121" /></a></figure> <!-- /wp:image --> <!-- wp:paragraph --> <p>69.171.224.40 github.global.ssl.fastly.net<br>185.199.111.153 assets-cdn.github.com<br>140.82.113.4 github.com<br>140.82.113.4 www.github.com</p> <!-- /wp:paragraph --> ]]-->]]></content>
      
      
      <categories>
          
          <category> Blog </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Github </tag>
            
            <tag> Hexo </tag>
            
            <tag> 博客搭建 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>国内镜像源设置</title>
      <link href="/guo-nei-jing-xiang-yuan-she-zhi.html"/>
      <url>/guo-nei-jing-xiang-yuan-she-zhi.html</url>
      
        <content type="html"><![CDATA[<h1 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h1><p>Linux软件源、开发语言依赖源、容器镜像源基本都在国外，因此国内访问非常慢<br>国内各大云厂商基本都做了对应的镜像源，果断用起来！<br>如无特殊情况，都使用清华的源<a href="https://opentuna.cn作为展示" target="_blank" rel="noopener">https://opentuna.cn作为展示</a></p><h1 id="更新"><a href="#更新" class="headerlink" title="更新"></a>更新</h1><p> npm 淘宝镜像切换域名为 <a href="https://npmmirror.com" target="_blank" rel="noopener">https://npmmirror.com</a><br> 老 <a href="http://npm.taobao.org" target="_blank" rel="noopener">http://npm.taobao.org</a> 和 <a href="http://registry.npm.taobao.org" target="_blank" rel="noopener">http://registry.npm.taobao.org</a> 域名将于2022年05月31日零时起停止服务。</p><h1 id="Linux系统"><a href="#Linux系统" class="headerlink" title="Linux系统"></a>Linux系统</h1><blockquote><p>软件源基本是通用的</p></blockquote><h2 id="CentOS-6-7-8系统源配置"><a href="#CentOS-6-7-8系统源配置" class="headerlink" title="CentOS 6/7/8系统源配置"></a>CentOS 6/7/8系统源配置</h2><pre><code>export REPO_MIRROR=&quot;https://opentuna.cn/centos&quot;sed -e &quot;s!#baseurl!baseurl!g&quot; \-e &quot;s!mirrorlist!#mirrorlist!g&quot; \-e &quot;s!http://mirror.centos.org!${REPO_MIRROR}!g&quot; \-i /etc/yum.repos.d/CentOS-Base.repo</code></pre><h2 id="EPEL源配置"><a href="#EPEL源配置" class="headerlink" title="EPEL源配置"></a>EPEL源配置</h2><pre><code>export REPO_MIRROR=&quot;https://opentuna.cn/epel&quot;sed -e &quot;s!^metalink=!#metalink=!g&quot; \-e &quot;s!^#baseurl=!baseurl=!g&quot; \-e &quot;s!https://download.fedoraproject.org/pub/epel!${REPO_MIRROR}!g&quot; \-i /etc/yum.repos.d/epel.repo /etc/yum.repos.d/epel-testing.repo</code></pre><h2 id="Debian9-10-11配置说明"><a href="#Debian9-10-11配置说明" class="headerlink" title="Debian9/10/11配置说明"></a>Debian9/10/11配置说明</h2><pre><code>export REPO_MIRROR=&quot;https://opentuna.cn&quot;sed -e &quot;s@http://deb.debian.org@${REPO_MIRROR}@g&quot; \-e &quot;s@http://security.debian.org@${REPO_MIRROR}@g&quot; \-e &quot;s@^deb-src@# deb-src@g&quot; \-i /etc/apt/sources.list</code></pre><h2 id="Ubuntu16-04-18-04-20-04配置说明"><a href="#Ubuntu16-04-18-04-20-04配置说明" class="headerlink" title="Ubuntu16.04/18.04/20.04配置说明"></a>Ubuntu16.04/18.04/20.04配置说明</h2><pre><code>export REPO_MIRROR=&quot;https://opentuna.cn&quot;sed -e &quot;s@http://.*archive.ubuntu.com@${REPO_MIRROR}@g&quot; \-e &quot;s@http://.*security.ubuntu.com@${REPO_MIRROR}@g&quot; \-e &quot;s@^deb-src@# deb-src@g&quot; \-i /etc/apt/sources.list</code></pre><h2 id="开发语言"><a href="#开发语言" class="headerlink" title="开发语言"></a>开发语言</h2><h3 id="Python"><a href="#Python" class="headerlink" title="Python"></a>Python</h3><h4 id="pip"><a href="#pip" class="headerlink" title="pip "></a>pip <a href="https://pypi.org/project/pip/" target="_blank" rel="noopener"><img src="https://img.shields.io/pypi/v/pip.svg" alt="PyPI - Python Version"></a></h4><h5 id="临时使用"><a href="#临时使用" class="headerlink" title="临时使用"></a>临时使用</h5><pre><code>pip install -i https://opentuna.cn/pypi/web/simple some-package</code></pre><h5 id="配置方法"><a href="#配置方法" class="headerlink" title="配置方法"></a>配置方法</h5><p>直接写配置文件</p><pre><code>mkdir -p ~/.pipcat &gt; ~/.pip/pip.conf &lt;&lt;EOF[global]index-url = https://opentuna.cn/pypi/web/simpletrusted-host = opentuna.cntimeout = 120[install]trusted-host = opentuna.cnEOF</code></pre><h5 id="命令配置-这里针对较新版本的pip"><a href="#命令配置-这里针对较新版本的pip" class="headerlink" title="命令配置(这里针对较新版本的pip)"></a>命令配置(这里针对较新版本的pip)</h5><h6 id="清华大学"><a href="#清华大学" class="headerlink" title="清华大学"></a>清华大学</h6><pre><code>pip config set global.index-url https://opentuna.cn/pypi/web/simplepip config set global.trusted-host opentuna.cnpip config set global.timeout 120pip config set install.trusted-host opentuna.cn</code></pre><h6 id="阿里云公网"><a href="#阿里云公网" class="headerlink" title="阿里云公网"></a>阿里云公网</h6><pre><code>pip config set global.index-url https://mirrors.aliyun.com/pypi/simple/pip config set global.trusted-host mirrors.aliyun.compip config set global.timeout 120pip config set install.trusted-host mirrors.aliyun.com</code></pre><h6 id="阿里云内网"><a href="#阿里云内网" class="headerlink" title="阿里云内网"></a>阿里云内网</h6><pre><code>pip config set global.index-url http://mirrors.cloud.aliyuncs.com/pypi/simple/pip config set global.trusted-host mirrors.cloud.aliyuncs.compip config set global.timeout 120pip config set install.trusted-host mirrors.cloud.aliyuncs.com</code></pre><h4 id="conda"><a href="#conda" class="headerlink" title="conda "></a>conda <img src="https://img.shields.io/conda/v/conda-forge/python" alt="Conda"></h4><pre><code>Linux系统保存到~/.condarcMacOS系统保存到~/.condarcWindows系统保存到%HOMEPATH%/.condarcchannels:- defaultsshow_channel_urls: truechannel_alias: https://mirrors.tuna.tsinghua.edu.cn/anacondadefault_channels:- https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/main- https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free- https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/r- https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/pro- https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/msys2custom_channels:conda-forge: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloudmsys2: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloudbioconda: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloudmenpo: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloudpytorch: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloudsimpleitk: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud</code></pre><h3 id="NPM"><a href="#NPM" class="headerlink" title="NPM "></a>NPM <a href="https://npm.im/npm" target="_blank" rel="noopener"><img src="https://img.shields.io/npm/v/npm.svg" alt="npm version"></a></h3><h4 id="淘宝"><a href="#淘宝" class="headerlink" title="淘宝"></a>淘宝</h4><ul><li><br>开源镜像</li><li><a href="https://npmmirror.com/mirrors" target="_blank" rel="noopener">https://npmmirror.com/mirrors</a><br>Node.js 镜像</li><li><a href="https://npmmirror.com/mirrors/node" target="_blank" rel="noopener">https://npmmirror.com/mirrors/node</a><br>alinode 镜像</li><li><a href="https://npmmirror.com/mirrors/alinode" target="_blank" rel="noopener">https://npmmirror.com/mirrors/alinode</a><br>phantomjs 镜像</li><li><a href="https://npmmirror.com/mirrors/phantomjs" target="_blank" rel="noopener">https://npmmirror.com/mirrors/phantomjs</a><br>ChromeDriver 镜像</li><li><a href="https://npmmirror.com/mirrors/chromedriver" target="_blank" rel="noopener">https://npmmirror.com/mirrors/chromedriver</a><br>OperaDriver 镜像</li><li><a href="https://npmmirror.com/mirrors/operadriver" target="_blank" rel="noopener">https://npmmirror.com/mirrors/operadriver</a><br>Selenium 镜像</li><li><a href="https://npmmirror.com/mirrors/selenium" target="_blank" rel="noopener">https://npmmirror.com/mirrors/selenium</a><br>Node.js 文档镜像</li><li><a href="https://npmmirror.com/mirrors/node/latest/docs/api/index.html" target="_blank" rel="noopener">https://npmmirror.com/mirrors/node/latest/docs/api/index.html</a><br>NPM 镜像</li><li><a href="https://npmmirror.com/mirrors/npm/" target="_blank" rel="noopener">https://npmmirror.com/mirrors/npm/</a><br>electron 镜像</li><li><a href="https://npmmirror.com/mirrors/electron/" target="_blank" rel="noopener">https://npmmirror.com/mirrors/electron/</a><br>node-inspector 镜像</li><li><a href="https://npmmirror.com/mirrors/node-inspector/" target="_blank" rel="noopener">https://npmmirror.com/mirrors/node-inspector/</a></li></ul><h4 id="华为云"><a href="#华为云" class="headerlink" title="华为云"></a>华为云</h4><ul><li><br>node-registry的镜像地址</li><li><a href="https://mirrors.huaweicloud.com/repository/npm/" target="_blank" rel="noopener">https://mirrors.huaweicloud.com/repository/npm/</a><br>nodejs工具的镜像地址</li><li><a href="https://mirrors.huaweicloud.com/nodejs" target="_blank" rel="noopener">https://mirrors.huaweicloud.com/nodejs</a><br>Node-Sass的镜像地址</li><li><a href="https://mirrors.huaweicloud.com/node-sass" target="_blank" rel="noopener">https://mirrors.huaweicloud.com/node-sass</a><br>浏览器引擎驱动镜像地址</li><li><a href="https://mirrors.huaweicloud.com/phantomjs" target="_blank" rel="noopener">https://mirrors.huaweicloud.com/phantomjs</a></li><li><a href="https://mirrors.huaweicloud.com/chromedriver" target="_blank" rel="noopener">https://mirrors.huaweicloud.com/chromedriver</a></li><li><a href="https://mirrors.huaweicloud.com/operadriver" target="_blank" rel="noopener">https://mirrors.huaweicloud.com/operadriver</a><br>Electron和Python的镜像地址</li><li><a href="https://mirrors.huaweicloud.com/electron/" target="_blank" rel="noopener">https://mirrors.huaweicloud.com/electron/</a></li><li><a href="https://mirrors.huaweicloud.com/python" target="_blank" rel="noopener">https://mirrors.huaweicloud.com/python</a></li></ul><h4 id="单次使用"><a href="#单次使用" class="headerlink" title="单次使用"></a>单次使用</h4><pre><code>npm install --registry=https://registry.npmmirror.com PACKAGE</code></pre><h4 id="配置方法-1"><a href="#配置方法-1" class="headerlink" title="配置方法"></a>配置方法</h4><p>这里以华为云为例，演示一下<br>直接写配置文件</p><p>Linux系统保存到~/.npmrc<br>MacOS系统保存到~/.npmrc<br>Windows系统保存到%HOMEPATH%/.npmrc</p><pre><code>registry=https://repo.huaweicloud.com/repository/npm/disturl=https://repo.huaweicloud.com/nodejssass_binary_site=https://repo.huaweicloud.com/node-sassphantomjs_cdnurl=https://repo.huaweicloud.com/phantomjschromedriver_cdnurl=https://repo.huaweicloud.com/chromedriveroperadriver_cdnurl=https://repo.huaweicloud.com/operadriverelectron_mirror=https://repo.huaweicloud.com/electron/python_mirror=https://repo.huaweicloud.com/python</code></pre><h4 id="命令配置"><a href="#命令配置" class="headerlink" title="命令配置"></a>命令配置</h4><p>设置node-registry的镜像地址</p><pre><code>npm config set registry https://repo.huaweicloud.com/repository/npm/</code></pre><p>设置nodejs工具的镜像地址</p><pre><code>npm config set disturl https://repo.huaweicloud.com/nodejs</code></pre><p>设置Node-Sass的镜像地址</p><pre><code>npm config set sass_binary_site https://repo.huaweicloud.com/node-sass</code></pre><p>设置浏览器引擎驱动镜像地址</p><pre><code>npm config set phantomjs_cdnurl https://repo.huaweicloud.com/phantomjsnpm config set chromedriver_cdnurl https://repo.huaweicloud.com/chromedrivernpm config set operadriver_cdnurl https://repo.huaweicloud.com/operadriver</code></pre><p>设置Electron和Python的镜像地址</p><pre><code>npm config set electron_mirror https://repo.huaweicloud.com/electron/npm config set python_mirror https://repo.huaweicloud.com/python</code></pre><h4 id="清理npm缓存"><a href="#清理npm缓存" class="headerlink" title="清理npm缓存"></a>清理npm缓存</h4><pre><code>npm cache clean -f</code></pre><h3 id="Golang"><a href="#Golang" class="headerlink" title="Golang  "></a>Golang  <img src="https://img.shields.io/github/go-mod/go-version/golang/go/master?color=ff69b4&filename=src%2Fgo.mod&style=plastic" alt="GitHub go.mod Go version (branch &amp; subdirectory of monorepo)"></h3><p>要求 <strong>Golang 1.11+</strong><br><code>go env</code><em>会读取系统环境变量，所以配置起来很简单</em><br><strong><em>开启Go Module</em></strong><br><strong>Golang 1.13+</strong> <em>里面的GOPROXY变成了数组，可以定义多个Proxy</em></p><h4 id="阿里云"><a href="#阿里云" class="headerlink" title="阿里云"></a>阿里云</h4><ul><li><a href="https://mirrors.aliyun.com/goproxy/" target="_blank" rel="noopener">https://mirrors.aliyun.com/goproxy/</a></li><li><a href="https://mirrors.cloud.aliyuncs.com/goproxy/" target="_blank" rel="noopener">https://mirrors.cloud.aliyuncs.com/goproxy/</a></li></ul><h4 id="华为云-1"><a href="#华为云-1" class="headerlink" title="华为云"></a>华为云</h4><ul><li><a href="https://mirrors.huaweicloud.com/goproxy" target="_blank" rel="noopener">https://mirrors.huaweicloud.com/goproxy</a></li></ul><h4 id="腾讯云"><a href="#腾讯云" class="headerlink" title="腾讯云"></a>腾讯云</h4><ul><li><a href="https://mirrors.cloud.tencent.com/go/" target="_blank" rel="noopener">https://mirrors.cloud.tencent.com/go/</a></li></ul><h4 id="七牛云"><a href="#七牛云" class="headerlink" title="七牛云"></a>七牛云</h4><ul><li><a href="https://goproxy.cn" target="_blank" rel="noopener">https://goproxy.cn</a></li></ul><h4 id="针对Golang-1-11"><a href="#针对Golang-1-11" class="headerlink" title="针对Golang 1.11"></a>针对Golang 1.11</h4><pre><code>export GO111MODULE=onexport GOPROXY=&#39;https://goproxy.cn&#39;</code></pre><h4 id="针对Golang-1-13"><a href="#针对Golang-1-13" class="headerlink" title="针对Golang 1.13+"></a>针对Golang 1.13+</h4><pre><code>export GO111MODULE=onexport GOPROXY=&#39;https://goproxy.cn,https://mirrors.aliyun.com/goproxy,direct&#39;</code></pre><h4 id="这里把git-example-com设置为私有的git服务器"><a href="#这里把git-example-com设置为私有的git服务器" class="headerlink" title="这里把git.example.com设置为私有的git服务器"></a>这里把git.example.com设置为私有的git服务器</h4><pre><code>export GOPRIVATE=&quot;git.example.com&quot;export GOSUMDB=&quot;sum.golang.google.cn&quot;</code></pre><p>Maven<br>阿里云<br>阿里云代理了Maven的公共仓库，这里是说明文档</p><p>腾讯云<br>1    <a href="http://mirrors.cloud.tencent.com/nexus/repository/maven-public/" target="_blank" rel="noopener">http://mirrors.cloud.tencent.com/nexus/repository/maven-public/</a><br>华为云<br>1    <a href="https://mirrors.huaweicloud.com/repository/maven/" target="_blank" rel="noopener">https://mirrors.huaweicloud.com/repository/maven/</a></p><h3 id="Maven配置"><a href="#Maven配置" class="headerlink" title="Maven配置"></a>Maven配置</h3><p>打开 Maven 的配置文件(windows机器一般在maven安装目录的conf/settings.xml)，在<mirrors></mirrors>标签中添加 mirror 子节点:</p><pre><code>&lt;mirrors&gt;&lt;mirror&gt;&lt;id&gt;aliyunmaven&lt;/id&gt;&lt;mirrorOf&gt;*&lt;/mirrorOf&gt;&lt;url&gt;https://maven.aliyun.com/repository/public&lt;/url&gt;&lt;/mirror&gt;</code></pre><pre><code>&lt;mirror&gt;&lt;id&gt;huaweicloud&lt;/id&gt;&lt;mirrorOf&gt;*&lt;/mirrorOf&gt;&lt;url&gt;https://mirrors.huaweicloud.com/repository/maven/&lt;/url&gt;&lt;/mirror&gt;</code></pre><pre><code>&lt;mirror&gt;&lt;id&gt;nexus-tencentyun&lt;/id&gt;&lt;mirrorOf&gt;*&lt;/mirrorOf&gt;&lt;url&gt;http://mirrors.cloud.tencent.com/nexus/repository/maven-public/&lt;/url&gt;&lt;/mirror&gt;&lt;/mirrors&gt;</code></pre><p>如果想使用其它代理仓库,可在<repository></repository>节点中加入对应的仓库使用地址。以使用spring代理仓为例：</p><pre><code>&lt;repository&gt;&lt;id&gt;spring&lt;/id&gt;&lt;url&gt;https://maven.aliyun.com/repository/spring&lt;/url&gt;&lt;releases&gt;&lt;enabled&gt;true&lt;/enabled&gt;&lt;/releases&gt;&lt;snapshots&gt;&lt;enabled&gt;true&lt;/enabled&gt;&lt;/snapshots&gt;&lt;/repository&gt;</code></pre><h3 id="Gradle配置"><a href="#Gradle配置" class="headerlink" title="Gradle配置"></a>Gradle配置</h3><p>在 build.gradle 文件中加入以下代码:</p><pre><code>allprojects {repositories {maven { url &#39;https://maven.aliyun.com/repository/public/&#39; }mavenLocal()mavenCentral()}}</code></pre><p>如果想使用 maven.aliyun.com 提供的其它代理仓，以使用 spring 仓为例，代码如下:</p><pre><code>allprojects {repositories {maven { url &#39;https://maven.aliyun.com/repository/public/&#39; }maven { url &#39;https://maven.aliyun.com/repository/spring/&#39;}mavenLocal()mavenCentral()}}</code></pre><h3 id="容器-DockerHub"><a href="#容器-DockerHub" class="headerlink" title="容器 DockerHub"></a>容器 DockerHub</h3><p>说明 docker 配置文件路径 <code>/etc/docker/daemon.json</code> 多个mirrors地址可以合并<br><strong>配置方法</strong></p><pre><code>{&quot;registry-mirrors&quot;: [&quot;https://pqbap4ya.mirror.aliyuncs.com&quot;,&quot;https://mirror.ccs.tencentyun.com&quot;,&quot;https://05f073ad3c0010ea0f4bc00b7105ec20.mirror.swr.myhuaweicloud.com&quot;,&quot;https://hub-mirror.c.163.com&quot;,&quot;https://mirror.baidubce.com&quot;]}</code></pre><h3 id="Kubernetes软件源"><a href="#Kubernetes软件源" class="headerlink" title="Kubernetes软件源"></a>Kubernetes软件源</h3><p>说明<br><strong>这里用阿里云的源</strong></p><h4 id="CentOS-7-8"><a href="#CentOS-7-8" class="headerlink" title="CentOS 7/8"></a>CentOS 7/8</h4><pre><code>cat &gt; /etc/yum.repos.d/kubernetes.repo &lt;&lt;EOF[kubernetes]name=Kubernetesbaseurl=https://mirrors.aliyun.com/kubernetes/yum/repos/kubernetes-el7-x86_64/enabled=1gpgcheck=1repo_gpgcheck=1gpgkey=https://mirrors.aliyun.com/kubernetes/yum/doc/yum-key.gpg https://mirrors.aliyun.com/kubernetes/yum/doc/rpm-package-key.gpgEOF</code></pre><h4 id="Debian-9-10"><a href="#Debian-9-10" class="headerlink" title="Debian 9/10"></a>Debian 9/10</h4><pre><code>curl -s https://mirrors.aliyun.com/kubernetes/apt/doc/apt-key.gpg | apt-key add -cat &lt;&lt;EOF &gt;/etc/apt/sources.list.d/kubernetes.listdeb https://mirrors.aliyun.com/kubernetes/apt kubernetes-stretch mainEOF</code></pre><h4 id="Ubuntu-16-04-18-04-20-04"><a href="#Ubuntu-16-04-18-04-20-04" class="headerlink" title="Ubuntu 16.04/18.04/20.04"></a>Ubuntu 16.04/18.04/20.04</h4><pre><code>curl -s https://mirrors.aliyun.com/kubernetes/apt/doc/apt-key.gpg | apt-key add -cat &lt;&lt;EOF &gt;/etc/apt/sources.list.d/kubernetes.listdeb https://mirrors.aliyun.com/kubernetes/apt/ kubernetes-xenial mainEOF</code></pre><p><strong>k8s.gcr.io</strong><br>国内齐全好用版本新的源推荐【张馆长】维护的，项目地址</p><ul><li><strong>registry.aliyuncs.com/k8sxio</strong></li><li><strong>quay.io</strong></li></ul><p>国内没有公有云厂商对外开放服务，只有网友自己维护的一些源</p><ul><li><strong>quay.azk8s.cn</strong>（于 2020年4月2日限制了对 Azure China 之外的 IP访问）</li><li><strong>quay.mirrors.ustc.edu.cn</strong> (从中科大校外对 Quay Container Registry 的镜像缓存的访问会被 302 重定向至源站)</li><li><strong>quay-mirror.qiniu.com</strong> (已停止公网DNS解析)</li></ul><p>网友维护 张馆长</p><ul><li><a href="https://github.com/zhangguanzhang/google_containers" target="_blank" rel="noopener">https://github.com/zhangguanzhang/google_containers</a></li></ul><p>本仓库只同步 <strong>k8s.gcr.io ==&gt; registry.aliyuncs.com/k8sxio</strong></p><p>特性<br>不依赖 Docker 运行<br>同步期间不占用本地磁盘空间(直接通过标准库转发镜像)<br>可控的并发同步(优雅关闭/可调节并发数量)<br>核心拷贝方法引用的<code>containers/image</code>，部分代码借鉴了<code>mritd</code><br>利用 boltdb 存储每个镜像 manifest 信息的 crc32 校验值，通过比对判断是否需要同步，而不是每次请求目标仓库<br>把 boltdb 文件放 docker 镜像里存在 dockerhub 上，多次运行 <code>action</code> 来同步<br>漠然 <strong><a href="https://github.com/mritd/imgsync" target="_blank" rel="noopener">https://github.com/mritd/imgsync</a></strong></p><p>特性<br>不依赖 Docker 运行<br>基于 Manifests 同步<br>支持 Fat Manifests 镜像同步<br>Manifests 文件本地 Cache，按需同步<br>同步期间不占用本地磁盘空间(直接通过标准库转发镜像)<br>可控的并发同步(优雅关闭/可调节并发数量)<br>按批次同步，支持同步指定区间段镜像<br>支持多仓库同步(后续仓库增加请提交 issue)<br>支持生成同步报告，同步报告推送 Telegram<br><strong><em>Registry    Address    Docker Hub</em></strong><br><strong>Flannel</strong>    <code>quay.io/coreos/flannel    gcrxio/quay.io_coreos_flannel</code>  <br><strong>kubeadm</strong>    <code>k8s.gcr.io    gcrxio/k8s.gcr.io_*</code>  <br><strong>Helm</strong>    <code>gcr.io/kubernetes-helm    gcrxio/gcr.io_kubernetes-helm_*</code>  <br><strong>Istio</strong>    <code>gcr.io/istio-release    gcrxio/gcr.io_istio-release_*</code>  <br><strong>Linkerd</strong>    <code>gcr.io/linkerd-io    gcrxio/gcr.io_linkerd-io_*</code>  <br><strong>Spinnaker</strong>    <code>gcr.io/spinnaker-marketplace    gcrxio/gcr.io_spinnaker-marketplace_*</code>  <br><strong>Distroless</strong>    <code>gcr.io/distroless    gcrxio/gcr.io_distroless_*</code>  <br><strong>Samples</strong>    <code>gcr.io/google-samples    gcrxio/gcr.io_google-samples_*</code>  <br><strong>KNative</strong>    <code>gcr.io/knative-releases    gcrxio/gcr.io_knative-releases_*</code>  <br>本文作者： 乱愣黎<br>本文链接： <a href="https://luanlengli.github.io/2020/01/17/国内镜像源设置.html" target="_blank" rel="noopener">https://luanlengli.github.io/2020/01/17/国内镜像源设置.html</a><br>版权声明： 本博客所有文章除特别声明外，均采用 CC BY-NC-SA 3.0 许可协议。转载请注明出处！</p>]]></content>
      
      
      <categories>
          
          <category> Blog </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Github </tag>
            
            <tag> Hexo </tag>
            
            <tag> 博客搭建 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
